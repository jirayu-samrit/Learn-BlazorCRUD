@inject ISuperHeroService SuperHeroService
@inject IJSRuntime JSRuntime

@if (Hero.Id == 0)
{
	<h3>Create a new Hero!</h3>
}
else
{
	<h3>Edit '@Hero.HeroName'</h3>
}

<EditForm Model="Hero" OnSubmit="HandleSubmit">
	<div class="form-group">
		<label>First Name</label>
		<InputText @bind-Value="Hero.FirstName" class="form-control"></InputText>
	</div>
	<div class="form-group">
		<label>Last Name</label>
		<InputText @bind-Value="Hero.LastName" class="form-control"></InputText>
	</div>
	<div class="form-group">
		<label>Hero Name</label>
		<InputText @bind-Value="Hero.HeroName" class="form-control"></InputText>
	</div>
	<div class="form-group">
		<label>Comic</label><br />
		<InputRadioGroup @bind-Value="comicID" class="form-control">
			@foreach (Comic comic in SuperHeroService.Comics)
			{
				<InputRadio Value="@comic.Id" />

				<span style="padding-left:5px;">@comic.Name</span>

				<br />
			}
		</InputRadioGroup>
	</div>
	<button type="submit" class="btn btn-primary">Submit</button>
</EditForm>

@code {
	[Parameter]
	public BlazorCRUD.Shared.SuperHero Hero { get; set; } = new BlazorCRUD.Shared.SuperHero();
	int comicID = 1;

	protected override async Task OnInitializedAsync()
	{
		await SuperHeroService.GetComics();
	}

	protected override void OnParametersSet()
	{
		if (Hero.Id != 0 && Hero.Comic != null)
		{
			comicID = Hero.Comic.Id;
		}
	}

	async void HandleSubmit()
	{
		Hero.Comic = SuperHeroService.Comics.FirstOrDefault(c => c.Id == comicID);

		await JSRuntime.InvokeVoidAsync("console.log", Hero);

		if (Hero.Id == 0)
		{
			Console.WriteLine("Create Hero");
			await SuperHeroService.CreateSuperHero(Hero);
		}
		else
		{
			Console.WriteLine("Edit Hero");
			await SuperHeroService.UpdateSuperHero(Hero, Hero.Id);
		}

		Hero = new BlazorCRUD.Shared.SuperHero();

	}
}
